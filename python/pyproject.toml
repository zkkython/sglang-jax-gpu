[build-system]
requires = ["setuptools>=64.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sglang-jax"
version = "0.0.1"
description = "JAX backend for SGL"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }

dependencies = [
    "fastapi~=0.116.1",
    "flax~=0.12.0",
    "huggingface-hub~=0.34.3",
    "jinja2~=3.1.6",
    "modelscope~=1.28.2",
    "msgpack-python~=0.5.6",
    "numpy~=2.2.6",
    "orjson~=3.11.1",
    "pillow~=11.3.0",
    "psutil~=7.0.0",
    "pydantic~=2.11.7",
    "python-multipart>=0.0.20",
    "pyzmq~=27.0.1",
    "requests~=2.32.4",
    "safetensors~=0.6.1",
    "setproctitle~=1.3.6",
    "tiktoken>=0.10.0",
    "transformers~=4.55.0",
    "typing-extensions~=4.14.1",
    "uvicorn~=0.35.0",
    "uvloop~=0.21.0",
    "psutil",
    "httpx",
    "openai",
    "pandas",
    "aiohttp",
    "pybase64",
    "partial_json_parser",
]

[project.optional-dependencies]
dev = [
]
tpu = [
    "jax[tpu]~=0.8.0",
]
gpu = [
    "jax[cuda12]~=0.7.1",
]
all = [
    "jax[tpu]~=0.8.0",
]

[tool.setuptools.packages.find]
exclude = [
    "assets*",
    "benchmark*",
    "docs*",
    "dist*",
    "playground*",
    "scripts*",
    "tests*",
]

[tool.wheel]
exclude = [
    "assets*",
    "benchmark*",
    "docs*",
    "dist*",
    "playground*",
    "scripts*",
    "tests*",
]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort (handled by pre-commit isort hook)
    # "I",
    # flake8-logging-format
    "G",
]
ignore = [
    # line too long handled by Black
    "E501",
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # zip without `strict=`
    "B905",
    # Loop control variable not used within loop body
    "B007",
]

[tool.ruff.format]
docstring-code-format = true
